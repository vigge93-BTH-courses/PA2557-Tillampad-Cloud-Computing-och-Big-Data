@startuml Architecture
skinparam sequenceArrowThickness 2
frame databases {
    database "CommunityDB"
    database "PostDB0"
    database "PostDB1"
    database "PostDBN"
}

PostDBN ~ PostDB1
PostDB1 -[hidden]> PostDB0 
PostDB0 -[hidden]> CommunityDB 

component WebServer as "Web server"
component LemmyFetcher as "Fetcher"
component CommunityWorker as "Worker"
component DatabaseService as "Database service"

DatabaseService --> databases: MongoDB\nWire Protocol

WebServer --> DatabaseService: HTTP REST API
CommunityWorker --> CommunityDB: MongoDB\nWire Protocol
LemmyFetcher --> PostDBN
LemmyFetcher --> PostDB1
LemmyFetcher --> PostDB0: MongoDB\nWire Protocol
LemmyFetcher --> CommunityDB: MongoDB\nWire Protocol

queue Messageq as "Message queue"
CommunityWorker --> Messageq: AMQP
Messageq --> LemmyFetcher: AMQP

boundary Lemmy
LemmyFetcher -up-> Lemmy: HTTP REST API
@enduml